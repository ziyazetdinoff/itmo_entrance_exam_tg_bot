services:
  # База данных PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: itmo_bot_db
    environment:
      POSTGRES_DB: itmo_bot_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d itmo_bot_db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - itmo_network

  # Основное приложение бота
  bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: itmo_bot
    environment:
      # База данных
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/itmo_bot_db
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=itmo_bot_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      
      # Настройки приложения
      - DEBUG=false
      - LOG_LEVEL=INFO
      - VECTOR_DB_PATH=/app/vector_db
      - DATA_DIR=/app/data
      - LOGS_DIR=/app/logs
      
      # RAG настройки
      - CHUNK_SIZE=1000
      - CHUNK_OVERLAP=200
      - REQUEST_TIMEOUT=30
      - RATE_LIMIT_DELAY=1
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Постоянные данные
      - bot_data:/app/data
      - bot_logs:/app/logs
      - vector_db:/app/vector_db
      
      # Для разработки (раскомментировать если нужно)
      # - ./src:/app/src:ro
      # - ./.env:/app/.env:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.path.append('/app'); from src.database import db_manager; db_manager.get_session().close()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - itmo_network

  # PgAdmin для управления базой данных (опционально)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: itmo_bot_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@itmo-bot.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - itmo_network
    profiles:
      - admin  # Запускается только с профилем: docker-compose --profile admin up

  # Мониторинг логов (опционально)
  logs:
    image: alpine:latest
    container_name: itmo_bot_logs
    command: tail -f /app/logs/app.log /app/logs/bot.log /app/logs/parser.log
    volumes:
      - bot_logs:/app/logs:ro
    depends_on:
      - bot
    profiles:
      - logs  # Запускается только с профилем: docker-compose --profile logs up

# Сети
networks:
  itmo_network:
    driver: bridge

# Постоянные тома
volumes:
  postgres_data:
    driver: local
  bot_data:
    driver: local
  bot_logs:
    driver: local
  vector_db:
    driver: local
  pgadmin_data:
    driver: local 